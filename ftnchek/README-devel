README for developers

OK, so you have checked out the source from sourceforge and are now
trying to figure out how to get it to build.  Because the svn
repository only contains those files that cannot be built from others,
it is not quite ready, and a few more steps are needed.

First, for reference, here is the way to check it out:

svn checkout https://ftnchek.svn.sourceforge.net/svnroot/ftnchek/ftnchek ftnchek


Now, do the following steps:

1. Copy config.sub, config.guess, and install.sh from your local
autoconf installation.  (You must have autoconf installed.)  E.g.
  $ cp /usr/share/automake-1.11/config.sub .
  $ cp /usr/share/automake-1.11/config.guess .
  $ cp /usr/share/automake-1.11/install-sh .

2. Now run autoconf to create configure script.
  $ autoconf

3. At this point configure should work.  Since you plan to do
development work, you should use the developer version of the
Makefile, which is specified by --enable-devel.  (This by default
builds the "devel" target, which turns on some debugging features.)
  $ ./configure --enable-devel

3a. On some systems (e.g. some MacOS) it may be necessary to use
  $ ./configure --enable-devel --disable-submodel
in order to get it to build.

4. Now build the executable.  First run of "make" will fail out due to
tokdefs.h being created new.  This is normal.  Re-run.
  $ make
  $ make

5. The regression test suite in directory "test" is distributed so
users can use "make check" to test that their build works correctly.
You should use it to make sure you do not introduce new bugs.  But no
test/Okay files are under revision control, so the first "make check"
will create them new.  You just have to trust that they are correct.
  $ make check


6. At this point you are all set to proceed with development.  As long
as you continue working in the same directory, you can keep up to date
simply by using "svn update".  It is not necessary to repeat the above
steps.  However, note that
  if you see configure.in among the updated files, you need to re-run
  autoconf to create the new configure script, and then you need to
  re-run configure,
and
  if you see Makefile.in or test/Makefile.in among the updated files,
  you need to re-run configure to create the new Makefiles.
It's best to do "make clean" before "make" after re-running
configure.



